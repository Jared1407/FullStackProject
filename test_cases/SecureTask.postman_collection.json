{
  "info": {
    "name": "Secure Task Management API",
    "_postman_id": "a1b2c3d4-5678-90ab-cdef-0123456789ab",
    "description": "Postman requests to exercise auth, RBAC, tasks CRUD, and audit log.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3500",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "task_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "owner_email",
      "value": "owner@acme.com",
      "type": "string"
    },
    {
      "key": "owner_password",
      "value": "Password123!",
      "type": "string"
    },
    {
      "key": "viewer_email",
      "value": "viewer@acme.com",
      "type": "string"
    },
    {
      "key": "viewer_password",
      "value": "Password123!",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Seed demo data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/seed",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "seed"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Seed returns ok true', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('ok');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login (Owner) \u2192 set {{token}}",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"{{owner_email}}\", \"password\": \"{{owner_password}}\"}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Got access_token', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('access_token');",
                  "  pm.environment.set('token', json.access_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login (Viewer) \u2192 set {{token}}",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"{{viewer_email}}\", \"password\": \"{{viewer_password}}\"}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Got access_token', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('access_token');",
                  "  pm.environment.set('token', json.access_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Tasks",
      "item": [
        {
          "name": "List Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/tasks",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "tasks"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', function(){ pm.response.to.have.status(200); });",
                  "pm.test('Array response', function(){ pm.expect(pm.response.json()).to.be.an('array'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Task (Owner/Admin) \u2192 set {{task_id}}",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"Finish RBAC\", \"status\": \"IN_PROGRESS\", \"category\": \"Work\", \"description\": \"Enforce permissions\"}"
            },
            "url": {
              "raw": "{{base_url}}/tasks",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "tasks"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('201/200 with id', function(){",
                  "  var j = pm.response.json();",
                  "  pm.expect(j).to.have.property('id');",
                  "  pm.environment.set('task_id', j.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Task title (PUT /tasks/{{task_id}})",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"title\": \"Finish RBAC (updated)\"}"
            },
            "url": {
              "raw": "{{base_url}}/tasks/{{task_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "tasks",
                "{{task_id}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', function(){ pm.response.to.have.status(200); });",
                  "pm.test('Title updated', function(){ pm.expect(pm.response.json().title).to.include('(updated)'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete Task (DELETE /tasks/{{task_id}})",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/tasks/{{task_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "tasks",
                "{{task_id}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', function(){ pm.response.to.have.status(200); });",
                  "pm.test('ok true', function(){ pm.expect(pm.response.json()).to.have.property('ok', true); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Tasks (No Token) \u2192 expect 401",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/tasks",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "tasks"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('401 Unauthorized', function(){ pm.response.to.have.status(401); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Delete as Viewer \u2192 expect 403",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/tasks/{{task_id}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "tasks",
                "{{task_id}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('403 Forbidden', function(){ pm.response.to.have.status(403); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Audit",
      "item": [
        {
          "name": "Get Audit Log (limit=50)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/audit-log?limit=50",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "audit-log"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('200 OK', function(){ pm.response.to.have.status(200); });",
                  "pm.test('Has lines array', function(){ var j = pm.response.json(); pm.expect(j).to.have.property('lines'); });"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}